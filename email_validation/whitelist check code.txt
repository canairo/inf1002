def get_domain(email): #func to get domain from email
    return email.split('@')[1]

def check_risk(email_content, whitelist, blacklist):
    print(f'\nProcessing email:{email_content}') #/n adds a new line before printing

    clean_email = email_content.split()[0] #this takes the first world from the str (the real email, ignores any extra word)
    print(f"Clean email (without any extra words): {clean_email}")

    domain = get_domain(clean_email)
    print(f"Extracted domain: {domain}")

    score = 0 

    if domain in whitelist:
        score += 5
        print(f'{domain} is in the whitelist')
    elif domain in blacklist:
        score -= 5
        print(f'{domain} is in the blacklist')
    else:
        print(f'{domain} is unknown')
    
    print(f'Risk score: {score}')
    return score
    
random_emails = [
    'cane@safe-domain.com',
    'cane@hbhd.com blacklist',
    'hbhd.com@gmail.com'
]

blacklist = open((r'C:\Users\Charm\inf1002\email_validation\blacklist.txt')).read().split(" ")
print(blacklist)

whitelist = open((r'C:\Users\Charm\inf1002\email_validation\whitelistf1.txt')).read().split(" ")
print(whitelist)

for email in random_emails:
    check_risk(email, whitelist, blacklist)
#for email in random_emails:
    #domain = get_domain(clean_email)
    #check_risk(email)
    #if domain in whitelist:
        #score += 5
        #print(f'{email}: {domain} is in the whitelist')
    #elif domain in blacklist:
        #score -= 5
        #print(f'{email}: {domain} is in the blacklist')
    #else:
        #print(f'{email}: {domain} is unknown')